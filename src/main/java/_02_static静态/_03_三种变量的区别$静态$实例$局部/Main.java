package _02_static静态._03_三种变量的区别$静态$实例$局部;

/**
 * @ClassName StaticDemo03
 * @Description 此类用于演示功能
 * @Author Shark
 * @DateTime 2022年07月04日 11时39分04秒
 * @Version 1.0
 *
 * 静态变量:声明在类中代码块外,且含有static关键字修饰的成员变量
 * 实例变量:声明在类中代码块外,且没有static关键字修饰的成员变量
 * 局部变量:声明在代码块内或者方法声明上的变量
 *
 * 三种变量的区别
 *      代码中的位置不同:
 *          静态变量:类中代码块外
 *          实例变量:类中代码块外
 *          局部变量:代码块内或方法声明上(形参列表)
 *      内存中的位置不同:
 *          静态变量:
 *              JDK7.0(包含)之前:方法区
 *              JDK8.0(包含)之后:堆内存
 *          实例变量:堆内存
 *          局部变量:栈内存
 *      变量是否含有默认值不同:
 *          静态变量:含有默认值
 *          实例变量:含有默认值
 *          局部变量:没有默认值
 *      代码中的作用域不同:
 *          静态变量:所属类中
 *          实例变量:所属类中(静态成员除外)
 *          局部变量:所属方法中
 *      内存中的生命周期不同:
 *          静态变量:随着类的加载而加载,随着类的回收而消失
 *          实例变量:随着对象的创建而加载,随着对象的回收而消失
 *          局部变量:随着方法的调用而加载,随着方法的出栈而消失
 *      加载方式和次数不同
 *          静态变量:随着类的加载而加载,因为类只会加载唯一的一次,也只加载唯一的一次
 *          实例变量:随着对象的创建而加载,每创建一次对象就会加载一次
 *          局部变量:随着方法的调用而加载,每调用一次方法就会加载一次
 *      修饰符的使用不同
 *          静态变量:程序中各种修饰符可以根据需求进行修饰
 *          实例变量:程序中各种修饰符可以根据需求进行修饰
 *          局部变量:只能使用final进行修饰
 */
public class Main {

}
